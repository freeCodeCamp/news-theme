{"version":3,"sources":["fitvids.js"],"names":["window","fitVids","postContent","count","document","getElementById","head","getElementsByTagName","div","createElement","innerHTML","appendChild","childNodes","_toConsumableArray","children","forEach","node","allVideos","join","selectors","filter","videoNode","parentNode","getAttribute","length","classList","contains","getComputedStyle","setAttribute","tagName","toLowerCase","parseInt","parseFloat","height","replace","videoContainer","add","videoWrapper","width","videoName","style","paddingTop","concat","aspectRatio","removeAttribute"],"mappings":"m+BACIA,SACFA,OAAOC,QAAU,SAACC,GAChB,IAAIC,EAAQ,EAEZ,IAAKC,SAASC,eAAe,kBAAmB,CAC9C,IAAMC,EAAOF,SAASE,MAAQF,SAASG,qBAAqB,QAAQ,GAI9DC,EAAMJ,SAASK,cAAc,OACnCD,EAAIE,UAAY,oUAXtBJ,EAAAK,YAAAH,EAAAI,WAAA,IAGIC,mBAAIV,EAAJW,UAAAC,QAAA,SAAAC,GAaE,IADFC,EAAAJ,mBAAIX,EAAAA,iBACgB,CAXhB,kCACF,6BACA,sCAEE,oDACF,qCACAM,SACAF,SAGgCY,KAACF,QACjCC,EAAME,EACJC,OAAA,SAAAJ,GAAA,MAAA,kBAAAA,KASEC,QAAS,SAAAI,GAIX,KAH4BL,UAA9BC,EAAYA,QAAUG,eAAOC,EAAcC,WAAKC,aAAnB,UAAAC,QAA7BH,EAAAC,WAAAG,UAAAC,SAAA,8BAGE,CAQGC,iBAAiBN,GAAjB,QADHM,iBACGA,GADH,QAMEN,MAAAA,EAAUO,aAAa,aACvBP,MAAAA,EAAUO,aAAV,YADAP,EAAUO,aAAa,SAAU,GAInCP,EAAUO,aACIC,QAAQC,KADtB,IA6BAT,GAdqC,WAAjCA,EAAUQ,QAACN,eACbF,EAAeE,aAAG,YAClBF,MAAUO,SAAAA,EAAVL,aAAA,UAAA,KACKQ,SAAAV,EAAAE,aAAA,UAAA,IACNS,WAbSL,iBAAiBN,EAAW,MAAMY,OAAOC,QAAQ,KAAM,OAgBjEC,MAAeV,SAAUW,EAAIb,aAAA,SAA7B,KAGAc,WACAA,iBAAuBD,EAAI,MAAAE,MAAAJ,QA5CI,KA8C/B,KAJMG,SAAAA,EAAejC,aAASK,SAA9B,KAOA4B,IAAAA,EAAa1B,aAAYU,QAAzB,CAEA,IAAIA,EAAUE,SAAapB,EAE3BkB,EAAIA,aAAUE,OAAagB,GArD7BpC,IAyDL,IAAAgC,EAAA/B,SAAAK,cAAA,OAjBO0B,EAAeV,UAAUW,IAAI,+BAE7B,IAAMC,EAAejC,SAASK,cAAc,OAC5C4B,EAAaG,MAAMC,WAAnB,GAAAC,OAAiD,IAAdC,EAAnC,KACAN,EAAaZ,UAAUW,IAAI,6BAG3Bf,EAAUC,WAAWX,YAAYwB,GACjCA,EAAexB,YAAY0B,GAC3BA,EAAa1B,YAAYU,GAErBA,EAAUE,aAAa,WACzBF,EAAUuB,gBAAgB,UACxBvB,EAAUE,aAAa,UAAUF,EAAUuB,gBAAgB","file":"fitvids.js","sourcesContent":["/* eslint-disable no-unused-vars */\nif (window) {\n  window.fitVids = (postContent) => {\n    let count = 0;\n\n    if (!document.getElementById('fit-vids-style')) {\n      const head = document.head || document.getElementsByTagName('head')[0];\n      const css =\n        // eslint-disable-next-line max-len\n        '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      const div = document.createElement('div');\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    [...postContent.children].forEach((node) => {\n      const selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'iframe[src*=\"player.bilibili.com\"]',\n        'object',\n        'embed'\n      ];\n\n      let allVideos = [...node.querySelectorAll(selectors.join(','))];\n      allVideos = allVideos.filter((node) => node !== 'object object');\n\n      allVideos.forEach((videoNode) => {\n        if (\n          (videoNode.tagName.toLowerCase() === 'embed' &&\n            videoNode.parentNode.getAttribute('object').length) ||\n          videoNode.parentNode.classList.contains('fluid-width-video-wrapper')\n        ) {\n          return;\n        }\n        if (\n          !getComputedStyle(videoNode)['height'] &&\n          !getComputedStyle(videoNode)['width'] &&\n          (isNaN(videoNode.getAttribute('height')) ||\n            isNaN(videoNode.getAttribute('width')))\n        ) {\n          videoNode.setAttribute('height', 9);\n          videoNode.setAttribute('width', 16);\n        }\n\n        let height =\n            videoNode.tagName.toLowerCase() === 'object' ||\n            (videoNode.getAttribute('height') &&\n              !isNaN(parseInt(videoNode.getAttribute('height'), 10)))\n              ? parseInt(videoNode.getAttribute('height'), 10)\n              : parseFloat(\n                  getComputedStyle(videoNode, null).height.replace('px', '')\n                ),\n          width = !isNaN(parseInt(videoNode.getAttribute('width'), 10))\n            ? parseInt(videoNode.getAttribute('width'), 10)\n            : parseFloat(\n                getComputedStyle(videoNode, null).width.replace('px', '')\n              ),\n          aspectRatio = height / width;\n\n        if (!videoNode.getAttribute('name')) {\n          const videoName = 'fitvid' + count;\n          videoNode.setAttribute('name', videoName);\n          count++;\n        }\n\n        const videoContainer = document.createElement('div');\n        videoContainer.classList.add('fluid-width-video-container');\n\n        const videoWrapper = document.createElement('div');\n        videoWrapper.style.paddingTop = `${aspectRatio * 100}%`;\n        videoWrapper.classList.add('fluid-width-video-wrapper');\n\n        // Append wrappers and video to page\n        videoNode.parentNode.appendChild(videoContainer);\n        videoContainer.appendChild(videoWrapper);\n        videoWrapper.appendChild(videoNode);\n\n        if (videoNode.getAttribute('height'))\n          videoNode.removeAttribute('height');\n        if (videoNode.getAttribute('width')) videoNode.removeAttribute('width');\n      });\n    });\n  };\n}\n"]}